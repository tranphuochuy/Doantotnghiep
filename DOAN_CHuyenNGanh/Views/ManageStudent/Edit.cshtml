@model DOAN_CHuyenNGanh.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("EditStudent", "ManageStudent", FormMethod.Post,
                                      new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal col-md-12">
        <div class="col-md-5" style="display:inline-block">
            <h4>Học sinh</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-12">

                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none" } })
                    @Html.EditorFor(model => model.Parent.Id, new { htmlAttributes = new { @class = "form-control", style = "display:none" } })
                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4">Họ và Tên lót</label>
                <div class="col-md-12">

                    @Html.EditorFor(model => model.lastname_Student, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lastname_Student, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Tên
                <div class="col-md-12">
                    @Html.EditorFor(model => model.firstname_Student, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.firstname_Student, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Ngày sinh
                <div class="col-md-12">
                    @Html.EditorFor(model => model.birthDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.birthDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Giới tính
                <div class="col-md-12">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.sex)
                        @Html.ValidationMessageFor(model => model.sex, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                Địa chỉ
                <div class="col-md-12">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Số điện thoại
                <div class="col-md-12">
                    @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Nơi sinh
                <div class="col-md-12">
                    @Html.EditorFor(model => model.birth_place, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.birth_place, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Ngày vào đoàn
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ngayvaodoan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ngayvaodoan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Ngày vào đội
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ngayvaodoi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ngayvaodoi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Nơi sinh
                <div class="col-md-12">
                    @Html.EditorFor(model => model.name_birth_place, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name_birth_place, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Quê quán
                <div class="col-md-12">
                    @Html.EditorFor(model => model.quequan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.quequan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                Mô tả thêm
                <div class="col-md-12">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="urlImage">Hình ảnh</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.urlImage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.urlImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input type="submit" value="Tạo mới" class="btn btn-default" />
                </div>
            </div>
        </div>
        <div class="col-md-5" style="
    display: inline-block;
    position: absolute;">
            <h4>Phụ huynh</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="col-md-4">Họ và Tên Phụ Huynh </label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Parent.name_Parent, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parent.name_Parent, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-4">Ngày sinh </label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Parent.birthDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parent.birthDay, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4">Số điện thoại </label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Parent.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parent.phonenumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-4">Nghề nghiệp </label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Parent.job, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parent.job, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label for="email">Email</label>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Parent.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parent.email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

}
<form action="https://imageresizewebapp20180731081006.azurewebsites.net/api/images/upload"
      class="dropzone needsclick dz-clickable"
      id="image-upload"
      method="post"
      enctype="multipart/form">
    <div class="dz-message needsclick">
        <span class="note needsclick">
            Drop files here or click to upload.
        </span>
    </div>
    <input type="file" name="file" />
</form>
<div>
    @Html.ActionLink("Trở về danh sách Học sinh", "Index")
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/js/blueimp-gallery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
<script>
    Dropzone.options.imageUpload = {
        paramName: "files", // The name that will be used to transfer the file
        dictDefaultMessage: "Drop files here or Click to Upload",
        addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function () {
            myDropzone = this;
            myDropzone.on("success", function (file, response) {
                console.log(file);
                $('#urlImage').val('https://storageimagedoan.blob.core.windows.net/blogimagedoan/' + file.name);
                myDropzone.removeFile(file);
            });
        }
    };
</script>